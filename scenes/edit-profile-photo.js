const Scene = require("telegraf/scenes/base");
const userModel = require("../models/User");
const { switcher } = require("../components/switcher");

// —Å—Ü–µ–Ω–∞ —Ñ–æ—Ç–æ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è

exports.GenEditProfilePhotoScene = function () {
	const editProfilePhoto = new Scene("editProfilePhoto");
	editProfilePhoto.enter(async (ctx) => {
		ctx.scene.state.sceneName = "editProfilePhoto";
		ctx.reply(
			`
üí° –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ, –∞–≤–∞—Ç–∞—Ä –∏–ª–∏ –∏–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É, —á—Ç–æ–±—ã –í–∞—Å –±—ã–ª–æ –ª–µ–≥—á–µ —É–∑–Ω–∞—Ç—å.
–≠—Ç–æ –æ—á–µ–Ω—å –ø–æ–º–æ–≥–∞–µ—Ç –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º
üí∞ <b>–ø–æ–ª—É—á–∞—Ç—å –±–æ–ª—å—à–µ –∑–∞–∫–∞–∑–æ–≤.</b> üí∞
        `,
			{
				parse_mode: "HTML",
			}
		);
	});
	editProfilePhoto.on("text", async (ctx) => {
		switcher(ctx);
	});
	editProfilePhoto.on("message", async (ctx) => {
		try {
			if (ctx.message.photo) {
				await userModel.updateOne(
					{ telegramId: ctx.message.from.id },
					{ $set: { profilePic: ctx.message.photo[0].file_id } }
				);
				await ctx.reply("üí° –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ");
			} else {
				await ctx.reply(`
üî¥ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. üî¥
–ù—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–º–µ–Ω–Ω–æ —Ñ–æ—Ç–æ/–∫–∞—Ä—Ç–∏–Ω–∫—É. –ù–µ —Ñ–∞–π–ª, –Ω–µ —Å—Ç–∏–∫–µ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É /help.]
                `);
			}
		} catch (error) {
			console.error(error);
		}
	});
	return editProfilePhoto;
};
